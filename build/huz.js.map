{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b1e2f53e373e3b31525e","webpack:///./src/index.js","webpack:///./src/parser.js","webpack:///./src/token.js","webpack:///./src/node.js","webpack:///./src/tokenizer.js","webpack:///./src/extension.js","webpack:///./src/helpers.js","webpack:///./src/renderer.js","webpack:///./~/escape-html/index.js","webpack:///./src/extensions/inheritance.js"],"names":[],"mappings":"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","file":"huz.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b1e2f53e373e3b31525e\n **/","import { Parser } from './parser';\nimport { Renderer } from './renderer';\nimport * as TokenType from './token';\nimport * as NodeType from './node';\nimport { register } from './extension';\n\nexport { Tokenizer } from './tokenizer';\nexport { Parser, Renderer, TokenType, NodeType };\n\nimport { Inheritance } from './extensions/inheritance';\n\nregister(Inheritance);\n\nexport function parse(src, opts) {\n  const parser = new Parser(opts);\n  return parser.parse(src);\n}\n\nexport function compile(src, opts) {\n  return new Renderer(src, opts);\n}\n\nexport function render(src, context, opts) {\n  const r = compile(src, opts);\n  return r.render(context);\n}\n\nexport { register };\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import * as TokenType from './token';\nimport * as NodeType from './node';\nimport { Tokenizer } from './tokenizer';\nimport { visit } from './helpers';\nimport { instantiateAll } from './extension';\n\nclass ParserContext {\n  constructor(parser) {\n    this._parser = parser;\n  }\n\n  appendNode(node) {\n    this._parser._appendNode(node);\n  }\n\n  pushParent(node) {\n    this._parser._pushParent(node);\n  }\n\n  popParent() {\n    return this._parser._popParent();\n  }\n\n  get top() {\n    return this._parser._stack.length;\n  }\n\n  get tailNode() {\n    return this._parser._stack.length > 0 ? this._parser._stack[this._parser._stack.length - 1] : null;\n  }\n\n  throw(message) {\n    return this._parser._throw(message);\n  }\n}\n\nexport class Parser {\n  constructor(opts = {}) {\n    this._delimiters = opts.delimiters ? opts.delimiters : [\"{{\", \"}}\"];\n    this._extensions = opts.extensions || instantiateAll();\n    this._filename = opts.filename || '';\n\n    if (this._extensions.length > 0) {\n      this._parserContext = new ParserContext(this);\n    }\n\n    this._stack = null;\n    this._lastToken = null;\n    this._src = null;\n  }\n\n  parse(src) {\n    const rootNode = { \n      type: NodeType.ROOT, \n      children: []\n    };\n    this._src = src;\n    this._stack = [rootNode];\n    this._lastToken = null;\n    this._parseNodes(src);\n\n    if (this._extensions.length > 0) {\n      for (let i = 0; i < this._extensions.length; i++) {\n        this._extensions[i].visit(rootNode);\n      }\n    }\n\n    return rootNode;\n  }\n\n  _appendNode(node) {\n    node.location.filename = this._filename;\n    this._stack[this._stack.length - 1].children.push(node);\n    return node;\n  }\n\n  _getTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  _clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  _makeLocation(beginLocation, endLocation) {\n    const location = this._clone(beginLocation);\n    if (endLocation) {\n      location.endIndex = endLocation.endIndex;\n      location.endLine = endLocation.endLine;\n    }\n    return location;\n  }\n\n  _parseNodes(src) {\n    let initialStackSize = this._stack.length;\n    let token;\n    const z = new Tokenizer(src, { \n      delimiters: this._delimiters.slice(0),\n      extensions: this._extensions\n    });\n\n    do {\n      token = z.getNextToken();\n\n      if (z.error !== null) {\n        throw z.error;\n      }\n\n      this._lastToken = token;\n\n      let handled = false;\n      if (this._extensions) {\n        for (let i = 0; i < this._extensions.length; i++) {\n          const ext = this._extensions[i];\n          if (ext.handleToken(token, this._parserContext) === true) {\n            handled = true;\n            break;\n          }\n        }\n      }\n\n      if (!handled) {\n        switch (token.type) {\n          case TokenType.TEXT:\n            this._appendNode({\n              type: NodeType.TEXT,\n              text: token.text,\n              location: this._makeLocation(token.location)\n            });\n            break;\n\n          case TokenType.VARIABLE:\n          case TokenType.UNESCAPED_VARIABLE:\n            this._appendNode({\n              type: NodeType.VARIABLE,\n              name: token.name,\n              unescaped: token.type === TokenType.UNESCAPED_VARIABLE,\n              location: this._makeLocation(token.location)\n            });\n            break;\n\n          case TokenType.SECTION_OPEN:\n            this._handleSectionOpen(token);\n            break;\n\n          case TokenType.INVERTED_SECTION_OPEN:\n            this._handleSectionOpen(token, true);\n            break;\n\n          case TokenType.SECTION_CLOSE:\n            this._handleSectionClose(token);\n            break;\n\n          case TokenType.PARTIAL:\n            this._appendNode({\n              type: NodeType.PARTIAL,\n              name: token.name,\n              indent: token.indent,\n              location: this._makeLocation(token.location)\n            });\n            break;\n\n          case TokenType.COMMENT:\n            this._handleComment(token);\n            break;\n\n          case TokenType.DELIMITER_CHANGE:\n            this._appendNode({\n              type: NodeType.DELIMITER_CHANGE,\n              delimiters: token.delimiters,\n              location: this._makeLocation(token.location)\n            });\n            break;\n        }\n      }\n    } while (token.type !== TokenType.EOF);\n\n    if (this._stack.length > initialStackSize) {\n      this._throw('Unexpected EOF: sections not closed: ' + \n        this._stack.slice(initialStackSize).map(n => `'${n.name}'`).join(', '));\n    } else if (this._stack.length < initialStackSize) {\n      this._throw('Internal error.');\n    }\n  }\n\n  _throw(message) {\n    const e = new Error(message);\n    e.location = this._lastToken.location;\n    throw e;\n  }\n\n  _pushParent(node) {\n    node.children = [];\n    this._stack.push(node);\n  }\n\n  _popParent() {\n    return this._stack.pop();\n  }\n\n  _handleSectionOpen(token, inverted = false) {\n    const { name, location } = token;\n    this._pushParent({\n      type: NodeType.SECTION,\n      name,\n      inverted,\n      location\n    });\n  }\n\n  _handleSectionClose(token) {\n    const { name, location } = token;\n    const section = this._popParent();\n    if (section.type !== NodeType.SECTION) {\n      this._throw(`Unexpected SECTION_CLOSE: '${name}'`);\n    }\n\n    if (section.name !== name) {\n      this._throw(`Unexpected SECTION_CLOSE: '${name}', current section: '${section.name}'`);\n    }\n\n    section.raw = this._src.slice(section.location.endIndex, location.index);\n    section.location = this._makeLocation(section.location, token.location);\n\n    this._appendNode(section);\n  }\n\n  _handleComment(token) {\n    const { content, location } = token;\n    this._appendNode({\n      type: NodeType.COMMENT,\n      content,\n      location: this._makeLocation(location)\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/parser.js\n **/","export const EOF                    = 'EOF';\nexport const TEXT                   = 'TEXT';\nexport const PARTIAL                = 'PARTIAL';\nexport const INVERTED_SECTION_OPEN  = 'INVERTED_SECTION_OPEN';\nexport const SECTION_OPEN           = 'SECTION_OPEN';\nexport const SECTION_CLOSE          = 'SECTION_CLOSE';\nexport const UNESCAPED_VARIABLE     = 'UNESCAPED_VARIABLE';\nexport const COMMENT                = 'COMMENT';\nexport const VARIABLE               = 'VARIABLE';\nexport const DELIMITER_CHANGE \t\t\t= 'DELIMITER_CHANGE';\n\n\n/** WEBPACK FOOTER **\n ** ./src/token.js\n **/","export const ROOT             = 'ROOT';\nexport const VARIABLE         = 'VARIABLE';\nexport const SECTION          = 'SECTION';\nexport const TEXT             = 'TEXT';\nexport const COMMENT          = 'COMMENT';\nexport const PARTIAL          = 'PARTIAL';\nexport const DELIMITER_CHANGE = 'DELIMITER_CHANGE';\n\n\n/** WEBPACK FOOTER **\n ** ./src/node.js\n **/","import * as TokenType from './token';\nimport { instantiateAll } from './extension';\nimport { trimStandaloneToken } from './helpers';\n\nconst STATE_NONE        = 'STATE_NONE';\nconst STATE_EOF         = 'STATE_EOF';\nconst STATE_TEXT        = 'STATE_TEXT';\nconst STATE_TEXT_BREAK  = 'STATE_TEXT_BREAK';\nconst STATE_TAG         = 'STATE_TAG';\n\nconst DELIMITER_LEFT  = 0;\nconst DELIMITER_RIGHT = 1;\n\nexport class Tokenizer {\n  constructor(src, opts = {}) {\n    this._extensions = opts.extensions || instantiateAll();\n    this._src = src;\n    this._index = 0;\n    this._char = null;\n    this._tokens = [];\n    this._line = 0;\n    this._column = 0;\n    this._state = STATE_NONE;\n    this._error = null;\n    this._location = {\n      index: 0,\n      line: 0,\n      column: 0\n    };\n    this._delimiters = opts.delimiters ? opts.delimiters : ['{{', '}}'];\n  }\n\n  get error() {\n    return this._error;\n  }\n\n  getNextToken() {\n    if (this._tokens.length > 0) {\n      return this._tokens.shift();\n    }\n\n    let done = false;\n    let matched = false;\n    do {\n      //console.log(this._state, this._tokens);\n      if (this._error !== null) {\n        return null;\n      }\n\n      if (this._state !== STATE_NONE) {\n        matched = true;\n        this._markTokenStartLocation();\n      }\n\n      switch (this._state) {\n        case STATE_NONE:\n          this._read();\n          break;\n\n        case STATE_EOF:\n          this._handleEOF();\n          done = true;\n          break;\n\n        case STATE_TEXT:\n          this._handleText();\n          break;\n\n        case STATE_TEXT_BREAK:\n          this._handleTextBreak();\n          done = true;\n          break;\n\n        case STATE_TAG:\n          this._handleTag();\n          break;\n      }\n\n      if (matched) {\n        this._markTokenEndLocation();\n        matched = false;\n      }\n\n      if (this._state === STATE_NONE) {\n        if (this._char === null) {\n          this._state = STATE_EOF;\n        } else if (this._char === '\\n') {\n          this._state = STATE_TEXT_BREAK;\n        } else if (this._isDelimiter(DELIMITER_LEFT)) {\n          this._state = STATE_TAG;\n        } else {\n          this._state = STATE_TEXT;\n        }\n      }\n\n    } while (!done);\n\n    return this._error === null ? this._tokens.shift() : null;\n  }\n\n  // Handlers\n\n  _handleEOF() {\n    this._handleStandaloneTag();\n    this._makeToken({ \n      type: TokenType.EOF\n    });\n  }\n\n  _handleTag() {\n    const [ left, right ] = this._delimiters;\n    this._skip(left.length);\n    this._skipAllWhitespaces();\n\n    if (this._char === null) {\n      this._setError('Unclosed tag.');\n    }\n    else if (this._isDelimiter(DELIMITER_RIGHT)) {\n      this._handleEmptyTag();\n    } else {\n      const tagTypeChar = this._char;\n      if (tagTypeChar === '{') {\n        this._handleVariableCurly();\n      } else {\n        let tagContentStart = this._index - 1;\n        //read content\n        while (!this._isDelimiter(DELIMITER_RIGHT) && this._char !== null) {\n          this._read();\n        }\n\n        if (this._char === null) {\n          this._setError('Unclosed tag.');\n        } else {\n          const content = this._src.slice(tagContentStart, this._index - 1);\n          switch (tagTypeChar) {\n            case '>': this._handleSimpleTag(TokenType.PARTIAL, content); break;\n            case '^': this._handleSimpleTag(TokenType.INVERTED_SECTION_OPEN, content); break;\n            case '#': this._handleSimpleTag(TokenType.SECTION_OPEN, content); break;\n            case '/': this._handleSimpleTag(TokenType.SECTION_CLOSE, content); break;\n\n            case '!':\n              this._handleComment(content.substr(1));\n              break;\n\n            case '=':\n              this._handleDelimiterChange(content);\n              break;\n            case '&':\n              this._handleVariable(content.substr(1), true);\n              break;\n            default:\n              this._handleVariable(content);\n              break;\n          }\n        }\n      }\n    }\n    if (this._error === null) {\n      //eat right\n      for (let i = 0; i < right.length; i++) {\n        this._read();\n      }\n    }\n\n    this._state = STATE_NONE;\n  }\n\n  _handleDelimiterChange(content) {\n    const newDelimiters = extractNewDelimiters(content);\n    if (newDelimiters === null) {\n      this._setError('Invalid change delimiter syntax.');\n    } else {\n      const [ left, right ] = newDelimiters;\n      this._delimiters = newDelimiters;\n      this._makeToken({\n        type: TokenType.DELIMITER_CHANGE,\n        delimiters: [ left, right ]\n      });\n    }\n  }\n\n  _handleSimpleTag(type, content) {\n    this._makeToken({ type, name: content.substr(1).trim() });\n  }\n\n  _handleComment(content) {\n    this._makeToken({\n      type: TokenType.COMMENT,\n      content\n    });\n  }\n\n  _handleVariableCurly() {\n    this._read(); //eat '{'\n    const begin = this._index - 1;\n    const d = this._distance('}');\n    if (d === -1) {\n      this._setError('Unclosed variable tag: missingright curly.');\n    } else {\n      const content = this._src.slice(begin, begin + d);\n      this._skip(d + 1); //skip '}'\n      this._skipAllWhitespaces();\n      if (!this._isDelimiter(DELIMITER_RIGHT)) {\n        this._setError('Unclosed variable: missing right delimiter.');\n      } else {\n        this._makeToken({\n          type: TokenType.UNESCAPED_VARIABLE,\n          name: content.trim()\n        });\n      }\n    }\n  }\n\n  _handleEmptyTag() {\n    this._makeToken({\n      type: TokenType.VARIABLE,\n      name: ''\n    });\n  }\n\n  _handleVariable(content, unescaped) {\n    this._makeToken({\n      type: unescaped ? TokenType.UNESCAPED_VARIABLE : TokenType.VARIABLE,\n      name: content.trim()\n    });\n  }\n\n  _handleText() {\n    let done = false;\n    let index = this._index - 1;\n    let length = 0;\n    do {\n      const c = this._char;\n\n      if (c === null || c === '\\n' || this._isDelimiter(DELIMITER_LEFT)) {\n        done = true;\n      } else {\n        length ++;\n      }\n\n      if (!done) {\n        this._read();\n      }\n    } while (!done);\n\n    this._makeToken({\n      type: TokenType.TEXT,\n      text: this._src.slice(index, index + length)\n    });\n\n    this._state = STATE_NONE;\n  }\n\n  _handleTextBreak() {\n    this._makeToken({\n      type: TokenType.TEXT,\n      text: '\\n'\n    });\n    this._read();\n    this._handleStandaloneTag();\n    this._state = STATE_NONE;\n  }\n\n  _handleStandaloneTag() {\n    this._tokens = trimStandaloneToken(this._tokens);\n  }\n\n  // Helpers\n  _dump(t = '') {\n    console.log(t +'>'+this._src.slice(this._index - 1));\n  }\n\n  _read() {\n    if (this._index < this._src.length) {\n      if (this._char === '\\n') {\n        this._line ++;\n        this._column = 0;\n      } else {\n        this._column ++;\n      }\n\n      this._char = this._src[this._index];\n      this._index ++;\n    } else {\n      this._char = null;\n    }\n  }\n\n  _peek() {\n    if (this._index < this._src.length - 1) {\n      return this._src[this._index];\n    } else {\n      return null;\n    }\n  }\n\n  _skip(n) {\n    for (let i = 0; i < n; i ++) {\n      this._read();\n    }\n  }\n\n  _distance(c) {\n    for (let i = this._index; i < this._src.length; i++) {\n      if (this._src[i] === c) {\n        return i - this._index + 1;\n      }\n    }\n    return -1;\n  }\n\n  _skipAllWhitespaces() {\n    while (this._isWhitespace()) {\n      this._read();\n    }\n  }\n\n  _markTokenStartLocation() {\n    this._location.index = this._index - 1;\n    this._location.line = this._line;\n    this._location.column = this._column;\n  }\n\n  _markTokenEndLocation() {\n    const token = this._tokens[this._tokens.length - 1];\n    const { index, line, column } = this._location;\n    token.location = {\n      index, line, column,\n      endIndex: this._index - 1,\n      endLine: this._line,\n      endColumn: this._column\n    };\n  }\n\n  _isWhitespace() {\n    return /\\s/.test(this._char);\n  }\n\n  _isDelimiter(d, offset = 0) {\n    const delimiter = this._delimiters[d];\n    const pos = this._index - 1 + offset;\n    return this._src.slice(pos, pos + delimiter.length) === delimiter;\n  }\n\n  _makeToken(token) {\n    if (this._extensions.length) {\n      try {\n        this._extensions.forEach(ext => {\n          token = ext.transformToken(token);\n        });\n      } catch (e) {\n        this._setError(e.message);\n        return;\n      }\n    }\n    this._tokens.push(token);\n  }\n\n  _setError(message) {\n    const error = new Error(message);\n    error.index = this._index - 1;\n    error.line = this._line;\n    error.column = this._column;\n    this._error = error;\n  }\n}\n\nfunction extractNewDelimiters(tagContent) {\n  const matches = tagContent.match(/=[\\s\\n]*([^\\s\\n]*?)[\\s\\n]+([^\\s\\n]*?)[\\s\\n]*=[\\s\\n]*$/);\n  if (matches) {\n    return matches.slice(1);\n  } else {\n    return null;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenizer.js\n **/","const registry = [];\n\nexport class Extension {\n  //called by tokenizer\n  transformToken(token) { return token; }\n\n  //called by parser\n  handleToken(token, parserContext) { }\n  visit(root) { return root; }\n  \n  //called by renderer\n  handleNode(node, renderContext) { }\n}\n\nexport function instantiateAll() {\n  return registry.map(ctor => {\n    return new ctor();\n  });\n}\n\nexport function register(constructor) {\n  return registry.push(constructor);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/extension.js\n **/","import * as TokenType from './token';\n\nexport function walk(root, modifier) {\n  let stack = root.children.slice(0).reverse();\n  while (stack.length) {\n    const node = stack.pop();\n    modifier(node);\n    if (node.children !== undefined) {\n      stack = stack.concat(node.children.slice(0).reverse());\n    }\n  }\n}\n\nexport function visit(root, visitor) {\n  let stack = [root];\n  while (stack.length) {\n    const parent = stack.pop();\n    for (let i = 0; i < parent.children.length; i++) {\n      const child = parent.children[i];\n      const modified = visitor.visit(child) || child;\n      if (modified !== child) {\n        parent.children[i] = modified;\n      }\n      if (child.children && child.children.length) {\n        stack.push(child);\n      }\n    }\n  }\n}\n\nexport function trimStandaloneToken(tokens) {\n  const count = tokens.length;\n\n  if (count === 0) {\n    return tokens;\n  }\n\n  let open = null;\n  let inline = 0;\n  let standalone = true;\n  let indentTokens = [];\n  for (let i = 0; standalone && i < count; i++) {\n    const token = tokens[i];\n    switch (token.type) {\n      case TokenType.VARIABLE:\n      case TokenType.UNESCAPED_VARIABLE:\n        standalone = false;\n        break;\n      case TokenType.TEXT:\n        if (isStringWhitespace(token.text)) {\n          if (inline === 0) {\n            indentTokens.push(token);\n          }\n        } else {\n          standalone = false;\n        }\n        break;\n      case TokenType.DELIMITER_CHANGE:\n      case TokenType.COMMENT:\n        if (open !== null) {\n          open.push(token);\n        } else {\n          inline ++;\n        }\n        break;\n      case TokenType.SECTION_CLOSE:\n        if (open) {\n          if (open[0].name === token.name) {\n            open = null;\n          } else {\n            standalone = false;\n          }\n        } else {\n          inline ++;\n        }\n        break;\n      default: //section-like tags\n        if (open === null) {\n          open = [token];\n          inline ++;\n        } else {\n          standalone = false;\n        }\n        break;\n    }\n\n    if (inline > 1) {\n      standalone = false;\n    }\n  }\n\n  if (open && open.length > 1) {\n    standalone = false;\n  }\n  \n  if (standalone) {\n    //all whitespace\n    if (indentTokens.length === count) {\n      return tokens;\n    }\n\n    let tailWSNodeCount = 0;\n    for (let i = count - 1; i >= 0; i--) {\n      const token = tokens[i];\n      if (token.type == TokenType.TEXT && isStringWhitespace(token.text)) {\n        tailWSNodeCount ++;\n      } else {\n        break;\n      }\n    }\n\n    if (indentTokens.length > 0 || tailWSNodeCount > 0) {\n      //trim\n      tokens = tokens.slice(indentTokens.length, count - tailWSNodeCount);\n      if (indentTokens.length) {\n        let indent = '';\n        indentTokens.forEach(t => { indent += t.text });\n        tokens[0].indent = indent;\n      }\n    }\n  }\n  return tokens;\n}\n\nfunction isStringWhitespace(str) {\n  return /^\\s*$/.test(str);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers.js\n **/","import * as nodeTypes from './node';\nimport escapeHTML from 'escape-html';\nimport { Parser } from './parser';\nimport { walk, visit } from './helpers';\nimport { instantiateAll } from './extension';\n\nconst REPEATER_NODE_TYPE  = '_REPEATER';\nconst MAX_PARTIAL_STACK = 10;\nconst MAX_LAMBDA_STACK = 255;\n\nclass RenderContext {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n\n  get top() {\n    return this._renderer._stack.length;\n  }\n\n  evaluate(name) {\n    return this._renderer._evaluate(name);\n  }\n\n  pushNodes(nodes) {\n    this._renderer._pushNodes(nodes);\n  }\n\n  pushContext(ctx) {\n    this._pushContext(ctx);\n  }\n\n  parse(src, opts) {\n    return this._renderer._parse(src, opts);\n  }\n\n  getParsedPartial(name) {\n    return this._renderer._getParsedPartial(name);\n  }\n\n  throw(message, location) {\n    return this._renderer._throw(message, location);\n  }\n}\n\nexport class Renderer {\n  constructor(src, opts = {}) {\n    //if this is true, src and values in partials are parsed tree, not string\n    this._parsed = opts.parsed || false;\n    \n    this._partials = opts.partials || {};\n    this._delimiters = opts.delimiters ? opts.delimiters : ['{{', '}}'];\n    this._extensions = opts.extensions || instantiateAll();\n    if (this._extensions.length > 0) {\n      this._renderContext = new RenderContext(this);\n    }\n\n    this._partialCached = {};\n    if (this._parsed) {\n      Object.keys(opts.partials).forEach(k => {\n        this._partialCached[k] = opts.partials[k].children;\n      });\n    }\n\n    this._stack = null;\n    this._contextStack = null;\n    this._partialStack = null;\n    this._lambdaStack = null;\n    this._src = src;\n  }\n\n  render(context) {\n    this._stack = [];\n    this._contextStack = [];\n    this._partialStack = [];\n    this._lambdaStack = [];\n\n    this._pushContext(context);\n\n    //push root nodes\n    const rootNode = this._parsed ? this._src : this._parse(this._src);\n    this._stack = rootNode.children.slice(0).reverse();\n\n    let out = '';\n    let newline = true;\n    while (this._stack.length > 0) {\n      const node = this._stack[this._stack.length - 1];\n      const partial = this._partialStack.length ? this._partialStack[this._partialStack.length - 1] : null;\n\n      //insert indent\n      if (node.type in nodeTypes) {\n        if (newline && partial !== null && partial.indent.length > 0) {\n          out += partial.indent;\n        }\n      }\n\n      let value;\n      switch (node.type) {\n        case nodeTypes.VARIABLE:\n          value = this._evaluate(node.name);\n          if (isFunction(value)) {\n            this._popNode();\n            this._expandLambda(node, value);\n          } else {\n            if (!!value) {\n              out += node.unescaped ? value : escapeHTML(value);\n            }\n            this._popNode();\n          }\n          break;\n\n        case nodeTypes.SECTION:\n          value = this._evaluate(node.name);\n          if (isFunction(value)) {\n            this._popNode();\n            this._expandLambda(node, value);\n          } else {\n            let isList = Array.isArray(value);\n\n            if (isList && value.length === 0) {\n              //Empty lists should behave like falsey values.\n              value = false;\n              isList = false;\n            }\n\n            let testResult = !!value;\n            if (node.inverted) {\n              testResult = !testResult;\n            }\n\n            if (testResult) {\n              if (isList) {\n                this._popNode();\n                this._pushRepeaterNode(value.length, node.children, value);\n              } else {\n                this._popNode()\n                this._pushContext(value);\n                this._pushNodes(node.children);\n              }\n            } else {\n              this._popNode();\n            }\n          }\n          break;\n\n        case nodeTypes.TEXT:\n          out += node.text;\n          this._popNode()\n          break;\n\n        case nodeTypes.COMMENT:\n          this._popNode();\n          break;\n\n        case nodeTypes.PARTIAL:\n          this._popNode();\n          this._expandPartial(node);\n          break;\n\n        case nodeTypes.DELIMITER_CHANGE:\n          this._popNode();\n          this._delimiters = node.delimiters.slice(0);\n          break;\n\n        case REPEATER_NODE_TYPE:\n          if (node.count < node.repeat) {\n            const repeatIndex = node.count;\n            if (repeatIndex === 0) {\n              this._pushContext(node.contexts[0]);\n            } else {\n              this._replaceTopContext(node.contexts[repeatIndex]);\n            }\n            this._pushNodes(node.children);\n            node.count ++;\n          } else {\n            this._popNode();\n          }\n          break;\n\n        default:\n          this._popNode();\n          if (this._extensions) {\n            this._extensions.forEach(ext => {\n              ext.handleNode(node, this._renderContext);\n            });\n          }\n          break;\n      }\n\n      this._checkStacks();\n      newline = out.length === 0 || (out[out.length -1 ] === '\\n');\n    }\n    return out;\n  }\n\n  _parse(src, opts = {}) {\n    opts.extensions = this._extensions;\n    const parser = new Parser(opts);\n    return parser.parse(src);\n  }\n\n  _pushNodes(list) {\n    for (let i = list.length - 1; i >= 0; i --) {\n      this._stack.push(list[i]);\n    }\n  }\n\n  _popNode() {\n    this._stack.pop();\n  }\n\n  _pushRepeaterNode(repeat, nodes, contexts) {\n    this._stack.push({\n      type: REPEATER_NODE_TYPE,\n      count: 0,\n      repeat,\n      children: nodes.slice(0),\n      contexts\n    });\n  }\n\n  _pushContext(context) {\n    this._contextStack.push({\n      context,\n      sp: this._stack.length\n    });\n  }\n\n  _pushPartial({ name, indent, location }) {\n    this._partialStack.push({\n      name,\n      indent: indent || '',\n      location,\n      sp: this._stack.length\n    });\n  }\n\n  _pushLambda({ name, location }) {\n    this._lambdaStack.push({\n      name,\n      location,\n      sp: this._stack.length\n    });\n  }\n\n  _replaceTopContext(context) {\n    this._contextStack[this._contextStack.length - 1].context = context;\n  }\n\n  _checkStacks() {\n    //console.log('STACK', this._stack);\n\n    //console.log('CONTEXT STACK:', this._contextStack);\n    if (this._stack.length === this._contextStack[this._contextStack.length - 1].sp) {\n      this._contextStack.pop();\n    }\n\n    //console.log('PARTIAL STACK:', this._partialStack);\n    if (this._partialStack.length > 0 && this._stack.length === this._partialStack[this._partialStack.length - 1].sp) {\n      this._partialStack.pop();\n    }\n\n    if (this._lambdaStack.length > 0 && this._stack.length === this._lambdaStack[this._lambdaStack.length - 1].sp) {\n      this._lambdaStack.pop();\n    }\n  }\n\n  _evaluate(name) {\n    if (name === '.') {\n      return this._contextStack[this._contextStack.length - 1].context;\n    }\n\n    const path = name.split('.');\n    for (let i = this._contextStack.length - 1; i >= 0; i--) {\n      const context = this._contextStack[i].context;\n      if (context === null || typeof context !== 'object') {\n        continue;\n      }\n\n      let current = context;\n      let resolved = true;\n      for (let pi = 0; pi < path.length; pi++) {\n        const key = path[pi];\n        if (current.hasOwnProperty(key)) {\n          current = current[key];\n        } else {\n          resolved = false;\n          break;\n        }\n      }\n\n      if (resolved) {\n        return current;\n      }\n    }\n    return '';\n  }\n\n  _getParsedPartial(name) {\n    if (this._partialCached.hasOwnProperty(name)) {\n      return this._partialCached[name];\n    } else {\n      if (!this._partials.hasOwnProperty(name)) {\n        return null;\n      }\n      const ast = this._parse(this._partials[name], { name });\n      const nodes = this._partialCached[name] = ast.children;\n      return nodes;\n    }\n  }\n\n  _expandPartial(node) {\n    const { name } = node;\n    const nodes = this._getParsedPartial(name);\n\n    if (nodes === null) {\n      //The empty string should be used when the named partial is not found.\n      return;\n    }\n\n    this._pushPartial(node);\n\n    if (this._partialStack.length > MAX_PARTIAL_STACK) {\n      this._throw(\n        'Possible partial short circuit: ' +\n          this._partialStack.map(f => `${f.name}@${f.location.filename}:${f.location.line+1}`).concat([name]).join(' -> '),\n        node.location\n      );\n    }\n\n    this._pushNodes(nodes);\n  }\n\n  _expandLambda(node, lambda) {\n    const { name } = node;\n\n    this._pushLambda(node);\n\n    if (this._lambdaStack.length > MAX_LAMBDA_STACK) {\n      this._throw(\n        'Possible lambda short circuit: ' +\n          this._lambdaStack.map(f => `${f.name}@${f.location.filename}:${f.location.line+1}`).concat([name]).join(' -> '),\n        node.location\n      );\n    }\n\n    let ast;\n    let skipped = false;\n    if (node.type === nodeTypes.VARIABLE) {\n      const code = lambda();\n      if (code) {\n        //A lambda's return value should parse with the default delimiters.\n        ast = this._parse('' + code, { name: '[lambda]' });\n        if (!node.unescaped) {\n          //Lambda results should be appropriately escaped.\n          walk(ast, node => {\n            if (node.type === nodeTypes.TEXT) {\n              node.text = escapeHTML(node.text);\n            }\n          });\n        }\n      } else {\n        skipped = true;\n      }\n    } else if (node.type === nodeTypes.SECTION) {\n      const code = lambda(node.raw);\n      if (code) {\n        //Lambdas used for inverted sections should be considered truthy.\n        //Lambdas used for sections should parse with the current delimiters.\n        ast = this._parse('' + code, {\n          name: '[#lambda]',\n          delimiters: this._delimiters.slice(0)\n        });\n      } else {\n        skipped = true;\n      }\n    }\n\n    if (!skipped) {\n      this._pushNodes(ast.children);\n    }\n  }\n\n  _throw(message, location) {\n    const e = new Error(message);\n    e.location = location;\n    throw e;\n  }\n}\n\nfunction isFunction(x) {\n  return Object.prototype.toString.call(x) == '[object Function]';\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/renderer.js\n **/","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/escape-html/index.js\n ** module id = 8\n ** module chunks = 0\n **/","// https://github.com/mustache/spec/pull/75\n\nimport { Extension, register } from '../extension';\nimport * as NodeType from '../node';\nimport * as TokenType from '../token';\nimport { walk } from '../helpers';\n\nconst PARENT = 'Inheritance.PARENT';\nconst BLOCK = 'Inheritance.BLOCK';\nconst LEAVE_SCOPE = 'Inheritance.LEAVE_SCOPE';\n\nfunction isInheritanceTagType(type) {\n  return type === PARENT || type === BLOCK;\n}\n\nexport class Inheritance extends Extension {\n  constructor() {\n    super();\n\n    this._blocks = null;\n  }\n\n  transformToken(token) {\n    const { type, name, location } = token;\n    switch (type) {\n      case TokenType.VARIABLE:\n        if (name) {\n          if (name[0] === '<') {\n            if (name.length === 1) {\n              throw new Error('Parent partial name expected');\n            }\n            token = {\n              type: PARENT,\n              name: name.slice(1),\n              location\n            };\n          } else if (name[0] === '$') {\n            if (name.length === 1) {\n              throw new Error('Block name expected');\n            }\n            token = {\n              type: BLOCK,\n              name: name.slice(1),\n              location\n            };\n          }\n        }\n        break;\n    }\n    return token;\n  }\n\n  handleToken(token, parserContext) {\n    let handled = false;\n    const { name, location, type } = token;\n    switch (type) {\n      case PARENT:\n        parserContext.pushParent({\n          type: PARENT,\n          name,\n          location\n        });\n        handled = true;\n        break;\n\n      case BLOCK:\n        parserContext.pushParent({\n          type: BLOCK,\n          name,\n          location\n        });\n        break;\n\n      case TokenType.SECTION_CLOSE:\n        const tagNode = parserContext.tailNode;\n        if (tagNode === null) {\n          if (isInheritanceTagType(tagNode.type)) {\n            parserContext.throw('Unexpected tag close');\n          }\n        } else {\n          if (tagNode.name !== name) {\n            parserContext.throw(`Unexpected tag close, current tag: ${tagNode.name}`);\n          }\n          if (isInheritanceTagType(tagNode.type)) {\n            parserContext.popParent();\n            tagNode.location.endIndex = location.endIndex;\n            tagNode.location.endLine = location.endLine;\n            parserContext.appendNode(tagNode);\n\n            //TODO move this to visit, handle whitespaces after Parent close tag.\n            const firstLine = tagNode.location.line;\n            const firstBlock = tagNode.children.find(c => c.type === BLOCK);\n            if (firstBlock && firstBlock.location.line === firstLine) {\n              for (let i = 0; i < firstBlock.children.length; i++) {\n                const blockNode = firstBlock.children[i];\n                if (blockNode.type === NodeType.TEXT && /^\\s*$/.test(blockNode.text)) {\n                  blockNode.text = '';\n                } else {\n                  break;\n                }\n              }\n            }\n\n            handled = true;\n          }\n        }\n        break;\n\n      case TokenType.EOF:\n        if (this.top > 0) {\n          parserContext.throw('Unexpected EOF: tags not closed: ' + \n            this.stack.map(f => f.name).join(', '));\n        }\n        break;\n    }\n    return handled;\n  }\n\n  handleNode(node, rendererContext) {\n    switch (node.type) {\n      case PARENT:\n        this._handleParent(node, rendererContext);\n        break;\n\n      case BLOCK:\n        this._handleBlock(node, rendererContext);\n        break;\n\n      case LEAVE_SCOPE:\n        this._blocks = null;\n        break;\n    }\n  }\n\n  _handleParent(node, rendererContext) {\n    const { name, location } = node;\n\n    if (this._blocks === null) {\n      rendererContext.pushNodes([\n        {\n          type: LEAVE_SCOPE\n        }\n      ]);\n      this._blocks = {};\n    }\n\n    //find all blocks defined in parent\n    node.children.forEach(child => {\n      if (child.type === BLOCK) {\n        const blockName = child.name;\n        if (!this._blocks.hasOwnProperty(blockName)) {\n          this._blocks[blockName] = child;\n        }\n      }\n    });\n\n    rendererContext.pushNodes([\n      {\n        type: TokenType.PARTIAL,\n        name, location,\n        indent: node.indent,\n      }\n    ]);\n  }\n\n  _handleBlock(node, rendererContext) {\n    const { name } = node;\n    if (this._blocks !== null && this._blocks.hasOwnProperty(name)) {\n      rendererContext.pushNodes(this._blocks[name].children);\n    } else {\n      rendererContext.pushNodes(node.children);\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/extensions/inheritance.js\n **/"],"sourceRoot":""}